采用覆盖每个背包容量对应的最优解来搞，
即原先不同背包容量在物品不重复的时候都有一个最优解
并且一定要逆序更新



dp[j]=max(dp[j],dp[j−w[i]])

左边是待更新的dp[j]，代表第i层的第j个格子；
右边的dp[j]是第i-1层的第j个格子，没有问题；
但是！！！右边的dp[j-w[i]]却已经变成了第i层的dp[j-w[i]]了，而不再是第i-1层的dp[j-w[i]]。因为内层如果是正序的话，j-w[i]肯定比j小，外层循环从i-1变到i，dp[j-w[i]]肯定比dp[j]先更新，这就导致了右边的dp[j-w[i]]是第i层的而非第i-1层的。
————————————————
版权声明：本文为CSDN博主「shuangge666666」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/m0_46379909/article/details/119887413