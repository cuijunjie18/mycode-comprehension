#include <bits/stdc++.h>
using namespace std;
double a[100001];//记录每个音符初始值
bool cmp(double a,double b)//降序排序
{
    return a>b;
}
double quickpow(double a,int b)//快速幂算法
{
    double ans = 1;
    while(b)
    {
        if(b&1) ans *= a;
        a *= a;
        b >>= 1;
    }
    return ans;
}
int main()
{
    int n;
    double p,q,s,sum = 0;//sum为初始期望，q/p为魔法成功概率
    scanf("%d%lf%lf%lf",&n,&p,&q,&s);
    for (int i = 1;i<=n;i++)
    {
        scanf("%lf",&a[i]);
    }
    sort(a+1,a+1+n,cmp);//排序
    int i;
    for (i = 2;a[i] + s>=a[1];i++)//当某个音符施展了魔法也没有大于最大音符不施展魔法，则其不可能最大，记录i并退出
    {
        sum += quickpow((1.0-p/q),i-1)*(p/q)*(a[i] + s);//某个音符成为最大音符的期望值权值
    }
    sum += (p/q)*(a[1] + s) + quickpow((1-p/q),i-1)*a[1];//记得加上可能成为最大音符的所有魔法全部失效时的期望
    printf("1\n");
    printf("%f\n",sum);
    return 0;
}
