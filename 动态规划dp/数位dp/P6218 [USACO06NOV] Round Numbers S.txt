//这篇就注意前导零就行
#include <bits/stdc++.h>
using namespace std;
int num[40];
int f[40][40][40];
int DFS(int len,int one,int zero,bool limit,bool lead0)
{
    if(len == 0) return (zero>=one)?1:0;
    if(!lead0&&!limit&&f[len][one][zero] != 0) return f[len][one][zero];
    int up = limit?num[len]:1;
    int ret = 0;
    for (int i = 0;i<=up;i++)
    {
        ret += DFS(len-1,one + (i == 1),zero + ((i == 0)&&(!lead0)),limit&&(num[len] == i),lead0&&(i == 0));
    }
    if(!limit&&!lead0) f[len][one][zero] = ret;
    return ret;
}
int Solve(int up)
{
    int len = 0;
    while(up)
    {
        num[++len] = up%2;
        up /= 2;
    }
    return DFS(len,0,0,true,true);
}
int main()
{
    int r,l;
    scanf("%d%d",&l,&r);
    printf("%d\n",Solve(r) - Solve(l-1));
    return 0;
}
