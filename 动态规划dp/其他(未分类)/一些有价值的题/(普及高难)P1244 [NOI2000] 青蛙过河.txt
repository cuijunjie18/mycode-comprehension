//背景:该题是给天赋哥做的,推理难
//具体原理:看洛谷题解第一篇
//时间复杂度:o(n^2),其实有通项公式的o(1)
//递推公式:f[h][k]=f[h-1][k]+f[h-2][k]+…+f[1][k]+f[0][k]+f[0][k]
#include <bits/stdc++.h>
using namespace std;
long long f[30][1001];//第一维为河心石墩的个数,第二维为荷叶数量
int main()
{
    int n,m;
    cin>>n>>m;//输入石墩及荷叶数量
    for (int i = 0;i<=m;i++) f[0][i] = i+1;//初始化仅有荷叶的答案,注意荷叶可能为0
    for (int i = 1;i<=n;i++)//dp石墩数量
    {
        f[i][m] = f[0][m];//初始化
        for (int j = 0;j<i;j++) f[i][m] += f[j][m];//根据递推公式,从0开始累加
    }
    cout<<f[n][m]<<"\n";//输出
    return 0;
}
