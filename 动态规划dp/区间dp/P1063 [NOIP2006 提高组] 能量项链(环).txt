#include <bits/stdc++.h>
using namespace std;
typedef struct pedal//珍珠结构体
{
    int head,rear;//该珍珠的头标记与尾标记
}PEDAL;
PEDAL p[300];//珍珠数组
int n;//珍珠的个数
long long f[300][300];//区间合并数组，f[i][j]表示将i珍珠到j珍珠之间所有珍珠合成一个释放的最大能量
long long ans;//答案
int main()
{
    cin>>n;//输入珍珠个数
    for (int i = 1;i<=n;i++)//依次录入每颗珍珠的头标记
    {
        cin>>p[i].head;
    }
    for (int i = 1;i<=n;i++)//记录环形后面的头标记
    {
        p[n+i].head = p[i].head;
    }
    for (int i = 1;i<=2*n-1;i++)//记录尾标记
    {
        p[i].rear = p[i+1].head;
    }
    p[2*n].rear = p[1].head;//最后一个特殊处理(其实不用也行，因为可以让他用不上)
    for (int i = 2;i<=n;i++)//枚举区间长度
    {
        for (int b = 1;b+i-1<=2*n;b++)//枚举起点，终点位置要<=2*n(其实2*n-1就够了，因为到2*n已经完全重复了一个周期了)
        {
            int e = b + i -1;//计算终点
            for (int k = b;k<e;k++)//枚举分割点
            {
                f[b][e] = max(f[b][e],f[b][k] + f[k+1][e] + (p[b].head*p[k].rear*p[e].rear));//取最大值
            }
        }
    }
    for (int i = 1;i<=n;i++)//枚举取最大值
    {
        if(f[i][i+n-1]>ans) ans = f[i][i+n-1];
    }
    cout<<ans<<endl;//输出
    return 0;
}