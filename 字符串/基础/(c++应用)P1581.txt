#include <bits/stdc++.h>
#include <string>
using namespace std;
int number1[10];
int number2[10];
int ans[10];
int main()
{
    string word1,word2,big;
    cin>>big;
    int pos = big.find("+");
    int n = big.size();
    word1 = big.substr(0,pos);
    word2 = big.substr(pos+1,n-pos-1);
    int index1 = 1;
    int index2 = 1;
    for (int i = 0;i<=pos-1;i++)
    {
        if(word1[i] == ',') index1++;
    }
    for (int i = 0;i<=n-pos-2;i++)
    {
        if(word2[i] == ',') index2++;
    }
    int k = 0;
    for (int i = index1;i>=1;i--)
    {
        while(word1[k]!=','&&word1[k]!='\0')
        {
            number1[i] = number1[i]*10+ word1[k] - '0';
            k++;
        }
        k++;
    }
    k = 0;
    for (int i = index2;i>=1;i--)
    {
        while(word2[k]!=','&&word2[k]!='\0')
        {
            number2[i] = number2[i]*10+ word2[k] - '0';
            k++;
        }
        k++;
    }
    int index = max(index1,index2);
    for (int i = 1;i<=index;i++)
    {
        ans[i] = number1[i] + number2[i];
    }
    for (int i = 1;i<=index;i++)
    {
        if(i == 1)
        {
            if(ans[i]>=2)
            {
                ans[i+1] += ans[i]/2;
                ans[i] = ans[i]%2;
            }
        }
        else if(i == 2)
        {
            if(ans[i]>=3)
            {
                ans[i+1] += ans[i]/3;
                ans[i] = ans[i]%3;
            }
        }
        else if(i == 3)
        {
            if(ans[i]>=5)
            {
                ans[i+1] += ans[i]/5;
                ans[i] = ans[i]%5;
            }
        }
        else if(i == 4)
        {
            if(ans[i]>=7)
            {
                ans[i+1] += ans[i]/7;
                ans[i] = ans[i]%7;
            }
        }
        else if(i == 5)
        {
            if(ans[i]>=11)
            {
                ans[i+1] += ans[i]/11;
                ans[i] = ans[i]%11;
            }
        }
    }
    if(ans[index+1]) index++;
    for (int i = index;i>=2;i--)
    {
        cout<<ans[i]<<',';
    }
    cout<<ans[1];
    return 0;
}