#include <bits/stdc++.h>
#include <queue>
using namespace std;
typedef struct point
{
    int x;
    int y;
    int hp;
    int t;
}POINT;
int n,m;
int walk[4][2] = {{-1,0},{1,0},{0,-1},{0,1}};
int mp[15][15];
int visit[15][15];
queue <POINT> que;
int main()
{
    cin>>n>>m;
    POINT temp;
    for (int i = 1;i<=n;i++)
    {
        for (int j = 1;j<=m;j++)
        {
            cin>>mp[i][j];
            if(mp[i][j] == 2)
            {
                visit[i][j] = 1;
                temp.x = i;
                temp.y = j;
                temp.hp = 6;
                temp.t = 0;
            }
        }
    }
    que.push(temp);
    while(!que.empty())
    {
        temp = que.front();
        que.pop();
        if(temp.hp == 0) continue;
        if(mp[temp.x][temp.y] == 3)
        {
            cout<<temp.t<<endl;
            return 0;
        }
        if(mp[temp.x][temp.y] == 4)
        {
            temp.hp = 6;
        }
        for (int i = 0;i<=3;i++)
        {
            POINT save = {temp.x+walk[i][0],temp.y+walk[i][1],temp.hp-1,temp.t+1}; /*判断中save.hp>visit[save.x][save.y]为关键*/
            if(save.x>=1&&save.x<=n&&save.y>=1&&save.y<=m&&save.hp>visit[save.x][save.y]&&mp[save.x][save.y]!=0)
            {
                visit[save.x][save.y] = save.hp;
                que.push(save);
            }
        }
    }
    cout<<-1<<endl;
    return 0;
}