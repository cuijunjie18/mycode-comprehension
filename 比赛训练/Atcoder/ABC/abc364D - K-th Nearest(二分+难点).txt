//背景：abc退步记录了，又是只有3题的一场
#include <bits/stdc++.h>
#define ll long long
using namespace std;
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int n,q,b,k;
    cin >> n >> q;
    int a[n+1];
    for (int i = 1; i <= n; i++) cin >> a[i];
    sort(a+1,a+n+1);
    while (q--)
    {
        cin >> b >> k;
        int ans = 0;
        int l = 0,r = 2e8;
        while (l <= r)
        {
            int mid = (l+r)>>1;
            // 不理解这里的二分上下界
            //现在理解了：例子 1 2 5 5 5 5 5 ，要找的是右边最后一个等于b + mid的，而不是第一个
            int p1 = lower_bound(a+1,a+n+1,b - mid) - a;
            int p2 = upper_bound(a+1,a+n+1,b + mid) - a;
            cout << mid << " " << p1 << " " << p2 << "\n";
            if (p2 - p1  >= k)
            {
                ans = mid;
                r = mid - 1;
            }
            else l = mid + 1;
        }
        cout << ans << "\n";
    }
    return 0;
}

/*
4 1
-3 -1 5 6
-2 3
*/
