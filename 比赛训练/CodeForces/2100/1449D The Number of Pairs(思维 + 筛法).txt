//背景：暑假训练，思维难题
//思路1：https://www.cnblogs.com/stelayuri/p/14556665.html
//思路2：https://www.cnblogs.com/stoorz/p/14717433.html
//收获：再次理解埃氏筛的时间复杂度为调和级数，且埃氏筛可以求解某数的质因数种类
#include <bits/stdc++.h>
#define MAXN 20000005
#define ll long long
using namespace std;
bool num[MAXN]; /// 判断素数
int kind[MAXN]; // 记录质因数的种类
int cnt;
ll c,d,x,ans;
void prework() // 埃氏筛预处理
{
    num[1] = true;
    for (int i = 2; i <= 20000000; i++)
    {
        if (!num[i])
        {
            for (int j = i; j <= 20000000; j += i) // 调和级数
            {
                kind[j]++;
                num[j] = true;
            }
        }
    }
}
ll quick_pow(ll a,ll b) // 快速幂
{
    ll temp = 1;
    while (b)
    {
        if (b&1) temp = temp * a;
        a = a * a;
        b >>= 1;
    }
    return temp;
}
void cal(int gcd) // 计算
{
	ll lcm = x + d * gcd;
	if (lcm % c == 0) // lcm要是整数
	{
		lcm /= c; //确定lcm
		if (lcm % gcd == 0) ans += quick_pow(2,kind[lcm/gcd]); // 组合数学计算答案
	}
}
void Solve()
{
    cin >> c >> d >> x;
    ans = 0;
    for (int i = 1; i*i <= x; i++) // 结论，gcd一定为x的因子，枚举gcd
    {
		if (x % i) continue;
		cal(i);
		if (i * i != x) cal(x/i);
    }
    cout << ans << "\n";
}
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    prework();
    int t = 1;
    cin >> t;
    while (t--)
    {
        Solve();
    }
    return 0;
}
