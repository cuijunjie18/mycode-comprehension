//原理:二维差分，二维差分数组的二维前缀和等于原数组
//时间复杂度:o(n^2)
#include <bits/stdc++.h>
using namespace std;
int b[1005][1005];//差分数组
int a[1005][1005];//原数组
int main()
{
    int n,m,x1,x2,y1,y2;
    scanf("%d%d",&n,&m);//输入
    for (int i = 1;i<=m;i++)//依次处理m块布
    {
        scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
        b[x1][y1]++;//二维差分数组处理
        b[x2+1][y1]--;
        b[x1][y2+1]--;
        b[x2+1][y2+1]++;
    }
    for (int i = 1;i<=n;i++)//计算原数组
    {
        for (int j = 1;j<=n;j++)
        {
            a[i][j] = a[i-1][j] + a[i][j-1] - a[i-1][j-1] + b[i][j];
        }
    }
    for (int i = 1;i<=n;i++)//输出
    {
        for (int j = 1;j<=n;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}
