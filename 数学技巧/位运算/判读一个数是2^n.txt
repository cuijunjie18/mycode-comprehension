bool isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; }
注意:方法仅适用于判断2的非负整数次幂
原理:2 的非负整数次幂对它本身取模，结果为 0，即如果 n 是 2 的非负整数次幂，n 和 n-1 的与操作结果为 0。
事实上，对于一个正整数 n，n-1 会将 n 的最低 1 位置零，并将后续位数全部置 1。因此，n 和 n-1 的与操作等价于删掉 n 的最低 1 位。
借此可以判断一个数是不是 2 的非负整数次幂。当且仅当 n 的二进制表示只有一个 1 时，n 为 2 的非负整数次幂。