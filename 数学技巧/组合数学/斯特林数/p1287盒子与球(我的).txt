//背景：暑假学习，这是我的做法
//思路：容斥 + 组合 + dp
#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll C[15][15];
ll dp[15]; // dp表示将n个物品放入i个不同集合（非空）的方案数
void prework()
{
    for (int i = 0; i <= 10; i++) C[i][0] = C[i][i] = 1;
    for (int i = 1; i <= 10; i++)
    {
        for (int j = 1; j < i; j++) C[i][j] = C[i-1][j-1] + C[i-1][j];
    }
}
ll quick_pow(ll a,ll b)
{
    ll ans = 1;
    while (b)
    {
        if (b&1) ans = ans * a;
        a = a * a;
        b >>= 1;
    }
    return ans;
}
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    prework();
    ll n,r;
    cin >> n >> r;
    dp[1] = 1;
    for (int i = 2; i <= r; i++)
    {
        dp[i] = quick_pow(i,n); // 初始时任选
        for (int j = 1; j <= i-1; j++) dp[i] -= C[i][j]*dp[i-j]; // 状态转移
    }
    cout << dp[r] << "\n";
    return 0;
}
