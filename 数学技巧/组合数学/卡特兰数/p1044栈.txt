//背景:朝花夕拾,之前没在意,重新做依旧不会
//联系:卡特兰数
/*思路:设 x 为当前出栈序列的最后一个，则x有n种取值
	  由于x是最后一个出栈的，所以可以将已经出栈的数分成两部分
      比x小,比x大
	  比x小的数有x-1个，所以这些数的全部出栈可能为f[x-1]
      比x大的数有n-x个，所以这些数的全部出栈可能为f[n-x]
      这两部分互相影响，所以一个x的取值能够得到的所有可能性为f[x-1] * f[n-x]*/
//ans = f[0]*f[n-1] + f[1]*f[n-2] + ... + f[n-1]*f[0];这就是传说中的卡特兰数!!!
#include <bits/stdc++.h>
using namespace std;
long long f[20];
int main()
{
    int n;
    scanf("%d",&n);
    f[0] = 1;//初始化
    f[1] = 1;
    for (int i = 2;i<=n;i++)
    {
        for (int j = 1;j<=i;j++)
        {
            f[i] += f[j-1]*f[i-j];
        }
    }
    printf("%lld\n",f[n]);
    return 0;
}