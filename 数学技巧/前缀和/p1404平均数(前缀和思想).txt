#include <bits/stdc++.h>
using namespace std;
int n,m;//n为数的个数，m为子串最小的长度
long long number[100001];//每个数字
long long sum[100001];//前缀和数组
long long ans;//答案
int r;//记录最大数字
int main()
{
    cin>>n>>m;//输入
    for (int i = 1;i<=n;i++)//输入数字
    {
        cin>>number[i];
        number[i] *= 100000;//扩大100000倍减少求平均数时的误差
        if(number[i]>r)//更新最大数字
        {
            r = number[i];
        }
    }
    int l = 0;//下界
    while(l<=r)//二分答案求解
    {
        long long mid = (l+r)/2;//假设答案为mid
        long long minn = 0;//初始化最小值为0
        int flag = 0;//标记遍历后是否存在长度大于等于m且平均值超过mid的子串
        for (int i = 1;i<=n;i++)//遍历数组
        {
            sum[i] = sum[i-1] + (number[i]-mid);//求前缀和(超出假设平均数的部分)，及计算贡献和
            if(i>=m)//如果已经满足长度大于等于m
            {
                minn = min(minn,sum[i-m]);//取最小值(sum可能为负数，及之前的子串贡献小于0)
                if(sum[i]-minn>=0)//前缀和思想，如果现在前缀和减去之前的最小贡献大于0等于0，即有子串满足条件
                {
                    flag = 1;//标记
                    break;//跳出循环
                }
            }
        }
        if(flag)//如果满足条件
        {
            ans = mid;//记录答案
            l = mid + 1;//提高下界
        }
        else//否则
        {
            r = mid - 1;//缩小上界
        }
    }
    cout<<ans/100<<endl;//输出最后平均值/100 (题目要求平均值的1000倍)
    return 0;
}