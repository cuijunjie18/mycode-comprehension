#include <bits/stdc++.h>
using namespace std;
int main()
{
    int a,b;
    scanf("%d%d",&a,&b);
    int ans = a*b/__gcd(a,b);
    printf("%d\n",ans);
    return 0;
}


//原理是两个数的最小公倍数等于两个数的乘积除于最大公约数

//证明：设a，b为两个数，不妨设c为其一个公倍数
               由公倍数定义，有c%a = 0且c%b = 0；
		    故不妨把c写成 c = （a*b）/k的形式，则有c%a = （b/k）*a%a = 0；~(1)
 						    同理c%b = （a/k）*b%b =0；~(2)
               这就要求a/k 与b/k 同时为整数(否则(1)与(2)不会同时成立)，就不满足c为a与b的公倍数的定义了
               当然，（a*b）/k也为整数 即k越大时且还满足a/k与b/k同时为整数时，c为一个公倍数
               故我们希望找一个最大k，使得a/k与b/k同时为整数，由此知，a与b的最大公约数即时满足条件的最大k
        故最小公倍数为(a*b)/k, 其中k = GCD(a,b); 得证！