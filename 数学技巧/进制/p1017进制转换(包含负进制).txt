//难点:负数进制如何表示，如何避免出现余数为负数的
/*原理:任何一个数有,被除数=除数*商+余数，例如-15%-2 = -1,-15/-2 = 7; 7*(-2) + (-1) = -15为c++中负数的余数，而我们要的进制位上为正数
有(商+1)*除数 + (余数-除数) = 商*除数+除数+余数-除数 = 被除数，故可以把该式等价原式，令新的余数为余数-除数，新的剩余被除数为原剩余被除数+除数*/
#include <bits/stdc++.h>
using namespace std;
int num[101];//位运算数组
int main()
{
    int n,k;
    scanf("%d%d",&n,&k);//输入n及对应进制
    int len = 0;//初始化位数
    int save = n;//保存原被除数
    while(n)//进制转换
    {
        num[++len] = n%k;//取余数
        if(n%k<0)//如果余数<0，转换为正数
        {
            num[len] = n%k-k;//减除数
            n += k;//剩余被除数要加上一个除数
        }
        n /= k;//进位继续
    }
    printf("%d=",save);//输出
    for (int i = len;i>=1;i--)//按位输出
    {
        if(num[i]>=10) printf("%c",num[i]-10+'A');//超过9的部分转换为字母
        else printf("%d",num[i]);
    }
    printf("(base%d)",k);
    return 0;
}
