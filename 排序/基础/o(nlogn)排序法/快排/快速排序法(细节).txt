//背景:以为已经很了解快速排序法了,结果又有新发现(细节)
#include <stdio.h>
#include <stdlib.h>
void Swap(int *a,int *b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}
void Sortdata(int a[],int begin,int end)
{
    if(begin>end) return;
    int point = a[begin];
    int i = begin;
    int j = end;
    while(i!=j)
    {
        while(a[j]>=point&&j>i)//注意这里一定要有等于,否则会出现一种情况即起点就满足情况,可以证明i或j总有一个值对标temp,故交换次数多了,且最后a[i] = temp
        {
            j--;
        }
        while(a[i]<=point&&i<j)
        {
            i++;
        }
        if(j>i)
        {
           Swap(&a[i],&a[j]);
        }
    }
    //则在这里互换时导致temp 与 a[i] 重复了
    a[begin] = a[i];
    a[i] = point;
    Sortdata(a,begin,i-1);
    Sortdata(a,i+1,end);
}

void Print(int a[],int n)
{
    for (int i = 0;i<=n-1;i++)
    {
        printf("%d\n",a[i]);
    }
    return;
}

int main()
{
    int n;
    printf("Please input how many number you want to save:");
    scanf("%d",&n);
    int number[n];
    for (int i = 0;i<=n-1;i++)
    {
        scanf("%d",&number[i]);
    }
    Sortdata(number,0,n-1);
    Print(number,n);
    return 0;
}