//背景:复习st表,试着去用线段树
//时间复杂度:o(nlogn)
#include <bits/stdc++.h>
using namespace std;
int tree[100005<<2];
int a[100005];
void Build(int l,int r,int pos)//建立线段树
{
    if(l == r)
    {
        tree[pos] = a[l];
        return;//记得返回
    }
    int mid  = (l+r)>>1;
    Build(l,mid,pos<<1);
    Build(mid+1,r,(pos<<1)|1);
    tree[pos] = max(tree[pos<<1],tree[(pos<<1)|1]);//取区间最值
}
int getans(int s,int t,int l,int r,int pos)//获取答案,注意区分s,t,l,r
{
    if(l <= s&&r >= t) return tree[pos];
    int mid = (s+t)>>1;
    int sum = 0;
    if(l <= mid) sum = max(sum,getans(s,mid,l,r,pos<<1));
    if(r >= mid + 1) sum = max(sum,getans(mid+1,t,l,r,(pos<<1)|1));
    return sum;
}
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int n,q,x,y;
    cin>>n>>q;
    for (int i = 1;i<=n;i++) cin>>a[i];
    Build(1,n,1);
    while(q--)
    {
        cin>>x>>y;
        cout<<getans(1,n,x,y,1)<<"\n";
    }
    return 0;
}
