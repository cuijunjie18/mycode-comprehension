//背景:预处理来自我的思路,也很好理解
#include <bits/stdc++.h>
using namespace std;
int lg[100001];
int f[100001][30];//核心倍增数组,意思为[x,x + 2^i - 1]区间内的最大值   更好理解:以x为起点,长度为2^i的区间
void prework()
{
    lg[1] = 0;
    for (int i = 2;i<=100000;i++) lg[i] = lg[i/2] + 1;
}
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    prework();//预处理一定不能忘记了
    int n,m,l,r;
    cin>>n>>m;
    for (int i = 1;i<=n;i++) cin>>f[i][0];
    for (int i = n;i>=1;i--)//倒着枚举,确保了前面的所有在范围内的情况已经遍历
    {
        for (int j = 1;i+(1<<j)-1<=n;j++)
        {
            f[i][j] = max(f[i][j-1],f[i+(1<<(j-1))][j-1]);//dp转移
        }
    }
    while(m--)
    {
        cin>>l>>r;
        int ans = 0;
        int temp = lg[r-l+1];
        ans = max(f[l][temp],f[r-(1<<temp)+1][temp]);
        cout<<ans<<"\n";
    }
    return 0;
}
