//背景：差分约束的Bellman-Ford的做法
#include <bits/stdc++.h>
#define ll long long
#define INF 10000000000
#define MAXN 5005
struct node
{
    int a,b;
    ll d;
}e[MAXN<<1];
ll dis[MAXN];
using namespace std;
int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    int n,m,x,y;
    cin >> n >> m;
    for (int i = 1; i <= n; i++) dis[i] = INF;
    for (int i = 1; i <= m; i++)
    {
        cin >> e[i].b >> e[i].a >> e[i].d;
    }
    for (int i = 1; i <= n; i++)
    {
        e[m+i].b = i;
        e[m+i].a = 0;
        e[m+i].d = 0;
    }
    dis[0] = 0;
    bool flag = false;
    for (int i = 1; i <= n; i++)
    {
        flag = false; // 每次重新初始化不要忘了
        for (int j = 1; j <= m+n; j++)
        {
            x = e[j].a;
            y = e[j].b;
            if (dis[x] == INF) continue; // 一定要有
            if (dis[y] > dis[x] + e[j].d)
            {
                dis[y] = dis[x] + e[j].d;
                flag = true;
            }
        }
        if (!flag) break;
    }
    if (flag) cout << "NO" << "\n";
    else
    {
        for (int i = 1; i <= n; i++) cout << dis[i] << " ";
    }
    return 0;
}
