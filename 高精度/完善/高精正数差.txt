#include <bits/stdc++.h>
using namespace std;
char word1[12000];//字符数字1
char word2[12000];//字符数字2
int number1[12000];//整型数字1
int number2[12000];//整型数字2
int ans[12000];//答案 为数字1减去数字2(可以为负数)
int n1,n2;//n1为数字1的位数，n2为数字2的位数
int judge()//判断大小函数
{
    if(n1>n2) return 1;//如果数字1位数多于数字2 返回1代表1大于2
    else if(n2>n1) return 0;//反过了 返回0
    else if(strcmp(word1,word2)==0)//如果完全相等
    {
        printf("0\n");//输出0
        exit(0);//结束程序
    }
    else//否则
    {
        return strcmp(word1,word2);//返回字符比较(字典序) 第一个不相同的数字来决定
    }
}
int main()
{
    scanf("%s",word1);//输入字符数字1
    scanf("%s",word2);//输入字符数字2
    n1 = strlen(word1);//计算数字1位数
    n2 = strlen(word2);//计算数字2位数
    for (int i = 1;i<=n1;i++)//转换为整型
    {
        number1[i] = word1[n1-i] - '0';
    }
    for (int i = 1;i<=n2;i++)//转换为整型
    {
        number2[i] = word2[n2-i] - '0';
    }
    if(judge())//如果数字1大
    {
        for (int i = n1;i>=1;i--)//从高位开始减(低位也行，但要多加条件判断)
        {
            ans[i] = number1[i] - number2[i];
        }
        int k = 1;
        while(k<=n1)//低位开始枚举，如果某一位小于0了，往前借10
        {
            if(ans[k]<0)
            {
                ans[k] += 10;
                ans[k+1]--;
            }
            k++;
        }
        while(ans[n1]==0&&n1>1) n1--;//去除前导零
        for (int i = n1;i>=1;i--)//高位开始输出
        {
            printf("%d",ans[i]);
        }
    }
    else//与上面一样，这是最后答案前输出'-'
    {
        for (int i = n2;i>=1;i--)
        {
            ans[i] = number2[i] - number1[i];
        }
        int k = 1;
        while(k<=n2)
        {
            if(ans[k]<0)
            {
                ans[k] += 10;
                ans[k+1]--;
            }
            k++;
        }
        while(ans[n2]==0&&n2>1) n2--;
        printf("-");
        for (int i = n2;i>=1;i--)
        {
            printf("%d",ans[i]);
        }
    }
    return 0;
}